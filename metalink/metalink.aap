########
# A-A-P rules generated by ccbuild version 1.5.3
# For more information visit: http://ccbuild.sourceforge.net
#
# To add extra build information, use Extra(Libs|Include|Define)For<Program basename>
# For example: ExtraLibsForCcbuild = "-L/home -lmyhome"
########


IncludeForMetalink = $?CcbuildDefaultIncludes $?GeneratedIncludeForMetalink $?ExtraIncludeForMetalink

DefineForMetalink = $?GeneratedDefineForMetalink $?ExtraDefineForMetalink

# Library flags for src/metalink.cc
GeneratedLibsForMetalink = \
	"-lboost_filesystem"
	"-lboost_program_options"
	"-lgcrypt"
	"-lgpg-error"
	"-lboost_regex"

LibsForMetalink = $?GeneratedLibsForMetalink $?ExtraIncludeForMetalink
# Sorted list of used global headers
GlobalHeadersForMetalink = \
	"algorithm"
	"boost/filesystem/convenience.hpp"
	"boost/filesystem/operations.hpp"
	"boost/lexical_cast.hpp"
	"boost/program_options.hpp"
	"boost/regex.hpp"
	"cassert"
	"cctype"
	"fstream"
	"gcrypt.h"
	"iomanip"
	"iostream"
	"iterator"
	"set"
	"sstream"
	"string"
	"sys/stat.h"
	"sys/types.h"
	"utility"
	"vector"

# Configuration generation (use by including config/basename.hh in your program)
ConfigurationFilenameForMetalink ?= src/config/metalink.hh
$ConfigurationFilenameForMetalink :
	:conf init
	_conf.INCLUDE += $IncludeForMetalink
	:conf language C++
	:conf header {required} $GlobalHeadersForMetalink
	:touch {exist} `os.path.dirname(_no.ConfigurationFilenameForMetalink)` {directory}
	:conf write header $ConfigurationFilenameForMetalink
CLEANFILES += $ConfigurationFilenameForMetalink

:program src/metalink
	{ comment = "ccbuild 1.5.3 generated program recipe for src/metalink.cc"}
	{ var_LIBS = $LibsForMetalink}
		: 
	{ var_INCLUDE = $IncludeForMetalink}
	{ var_DEFINE = $DefineForMetalink}
	"src/metalink.cc"
	"src/String/translated.cc"
	"src/Globals/statics.cc"
	"src/Globals/XMLSafe.cc"
	"src/Globals/XMLQuotedSafe.cc"
	"src/Hash/HashGNUnet/value.cc"
	"src/Hash/HashGNUnet/update.cc"
	"src/Hash/HashGNUnet/pushChk.cc"
	"src/Hash/HashGNUnet/gnunettisch.cc"
	"src/Hash/HashGNUnet/finalize.cc"
	"src/Hash/HashGNUnet/encryptBlock.cc"
	"src/Hash/HashGNUnet/blockKeyAndQuery.cc"
	"src/Hash/HashGNUnet/blockKey.cc"
	"src/Hash/HashGNUnet/HashGNUnet.cc"
	"src/Hash/GCrypt/value.cc"
	"src/Hash/GCrypt/update.cc"
	"src/Hash/GCrypt/name.cc"
	"src/Hash/GCrypt/from.cc"
	"src/Hash/GCrypt/finalize.cc"
	"src/Hash/HashGNUnet/SessionKey/statics.cc"
	"src/Hash/HashGNUnet/SessionKey/fromHash.cc"
	"src/Hash/HashCRC32/from.cc"
	"src/Hash/HashED2K/value.cc"
	"src/Hash/HashED2K/update.cc"
	"src/Hash/HashED2K/finalize.cc"
	"src/HashList/update.cc"
	"src/HashList/finalize.cc"
	"src/HashList/destroyMembers.cc"
	"src/MD5File/record.cc"
	"src/MetalinkFile/finalize.cc"
	"src/MetalinkFile/addPath.cc"
	"src/MirrorList/MirrorList.cc"
	"src/Mirror/asXMLWithFile.cc"
	"src/Mirror/Mirror.cc"
	"src/Metalink/from.cc"

